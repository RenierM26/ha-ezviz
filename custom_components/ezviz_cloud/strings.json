{
  "config": {
    "flow_title": "{serial}",
    "step": {
      "user": {
        "title": "Connect to EZVIZ Cloud",
        "data": {
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "url": "[%key:common::config_flow::data::url%]"
        }
      },
      "user_custom_url": {
        "title": "Connect to custom EZVIZ URL",
        "description": "Manually specify your region URL",
        "data": {
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "url": "[%key:common::config_flow::data::url%]"
        }
      },
      "confirm": {
        "title": "Discovered EZVIZ Camera",
        "description": "Enter RTSP credentials for EZVIZ camera {serial} with IP {ip_address}",
        "data": {
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "enc_key": "Encryption key",
          "rtsp_uses_verification_code": "Camera uses sticker verification code for video stream",
          "test_rtsp_credentials": "Test RTSP credentials"
        }
      },
      "async_step_confirm_2FA": {
        "title": "EZVIZ camera encryption key",
        "description": "Enter MFA code to fetch encryption key for EZVIZ camera {serial} with IP {ip_address}",
        "data": {
          "cam_verification_2fa_code": "DEVICE_AUTH_CODE 2FA code from email if required",
          "cam_encryption_2fa_code": "DEVICE_ENCRYPTION 2FA code from email if required"
        }
      },
      "reauth_confirm": {
        "title": "[%key:common::config_flow::title::reauth%]",
        "description": "Enter credentials to reauthenticate to ezviz cloud account",
        "data": {
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]"
        }
      },
      "user_mfa_confirm": {
        "title": "EZVIZ Cloud MFA Authentication",
        "description": "Enter MFA code to authenticate ezviz cloud account",
        "data": { "sms_code": "MFA Code" }
      },
      "reauth_mfa": {
        "title": "EZVIZ Cloud MFA Authentication",
        "description": "Enter MFA code to authenticate ezviz cloud account",
        "data": { "sms_code": "MFA Code" }
      }
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]",
      "invalid_host": "[%key:common::config_flow::error::invalid_host%]",
      "mfa_required": "2FA enabled on account, please disable and retry",
      "device_exception": "Device exception, couldn't fetch key"
    },
    "abort": {
      "already_configured_account": "[%key:common::config_flow::abort::already_configured_account%]",
      "unknown": "[%key:common::config_flow::error::unknown%]",
      "ezviz_cloud_account_missing": "Ezviz cloud account missing. Please reconfigure Ezviz cloud account",
      "reauth_successful": "[%key:common::config_flow::abort::reauth_successful%]"
    }
  },
  "options": {
    "step": {
      "init": {
        "data": {
          "timeout": "Request Timeout (seconds)",
          "ffmpeg_arguments": "Arguments passed to ffmpeg for cameras"
        }
      }
    }
  },
  "entity": {
    "select": {
      "alarm_sound_mode": {
        "name": "Warning sound",
        "state": {
          "soft": "Soft",
          "intensive": "Intensive",
          "silent": "Silent"
        }
      },
      "battery_camera_work_mode": {
        "name": "Battery work mode",
        "state": {
          "power_save": "Power save",
          "high_performance": "High performance",
          "plugged_in": "Plugged in",
          "super_power_save": "Super power saving",
          "custom": "Custom",
          "hibernate": "Hibernate"
        }
      },
      "battery_camera_work_mode_aov": {
        "name": "Battery work mode",
        "state": {
          "standard": "Standard",
          "plugged_in": "Plugged in",
          "power_save": "Power saving",
          "aov_mode": "Always on video",
          "custom": "Custom"
        }
      },
      "night_vision_model": {
        "name": "Night vision mode",
        "state": {
          "night_vision_b_w": "Black and white",
          "night_vision_colour": "Colour"
        }
      },
      "smart_night_vision_model": {
        "name": "Night vision mode",
        "state": {
          "night_vision_b_w": "Black and white",
          "night_vision_colour": "Colour",
          "night_vision_smart": "Smart mode"
        }
      },
      "smart_night_vision_model_battery": {
        "name": "Night vision mode",
        "state": {
          "night_vision_b_w": "Black and white",
          "night_vision_smart": "Smart mode"
        }
      },
      "advanced_detect_human_car_pir": {
        "name": "Detection mode",
        "state": {
          "advanced_detect_human_shape": "Human shape",
          "advanced_detect_pir": "Pir"
        }
      },
      "advanced_detect_human_car": {
        "name": "Detection mode",
        "state": {
          "advanced_detect_human_shape": "Human shape",
          "advanced_detect_image_change": "Image change"
        }
      }
    },
    "image": { "last_motion_image": { "name": "Last motion image" } },
    "button": {
      "ptz_up": { "name": "PTZ up" },
      "ptz_down": { "name": "PTZ down" },
      "ptz_left": { "name": "PTZ left" },
      "ptz_right": { "name": "PTZ right" },
      "restart_device": { "name": "Restart" },
      "flip_image": { "name": "Flip camera image" }
    },
    "binary_sensor": {
      "alarm_schedules_enabled": { "name": "Alarm schedules enabled" },
      "encrypted": { "name": "Encryption" }
    },
    "light": { "light": { "name": "[%key:component::light::title%]" } },
    "number": { "detection_sensibility": { "name": "Detection sensitivity" } },
    "sensor": {
      "alarm_sound_mod": { "name": "Alarm sound level" },
      "last_alarm_time": { "name": "Last alarm time" },
      "seconds_last_trigger": { "name": "Seconds since last trigger" },
      "last_alarm_pic": { "name": "Last alarm picture URL" },
      "supported_channels": { "name": "Supported channels" },
      "local_ip": { "name": "Local IP" },
      "wan_ip": { "name": "WAN IP" },
      "pir_status": { "name": "PIR status" },
      "last_alarm_type_code": { "name": "Last alarm type code" },
      "last_alarm_type_name": { "name": "Last alarm type name" },
      "last_offline_time": { "name": "Last offline" }
    },
    "switch": {
      "voice_prompt": { "name": "Voice prompt" },
      "status_light": { "name": "Status light" },
      "privacy": { "name": "Privacy" },
      "infrared_light": { "name": "Infrared light" },
      "sleep": { "name": "Sleep" },
      "audio": { "name": "Audio" },
      "motion_tracking": { "name": "Motion tracking" },
      "all_day_video_recording": { "name": "All day video recording" },
      "auto_sleep": { "name": "Auto sleep" },
      "flicker_light_on_movement": { "name": "Flicker light on movement" },
      "pir_motion_activated_light": { "name": "PIR motion activated light" },
      "tamper_alarm": { "name": "Tamper alarm" },
      "follow_movement": { "name": "Follow movement" },
      "watermark": { "name": "Watermark on image" },
      "encrypted": { "name": "Encryption" },
      "push_notify_alarm": { "name": "Alarm push notification" },
      "push_notify_call": { "name": "Call push notification" },
      "offline_notify": { "name": "Offline notification" },
      "motion_detection": { "name": "Motion detection" }
    },
    "siren": { "siren": { "name": "[%key:component::siren::title%]" } }
  },
  "services": {
    "wake_device": {
      "name": "Wake camera",
      "description": "This can be used to wake the camera/device from hibernation."
    }
  }
}
